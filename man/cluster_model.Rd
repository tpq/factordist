% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/6-cluster_model.R
\docType{class}
\name{cluster_model}
\alias{cluster_model}
\alias{cluster_model-class}
\alias{print,cluster_model-method}
\alias{show,cluster_model-method}
\alias{predict,cluster_model-method}
\title{Build Model of Cluster Assignmentss}
\usage{
\S4method{print}{cluster_model}(x)

\S4method{show}{cluster_model}(object)

cluster_model(x, y, FUN, asym = FALSE, ...)

\S4method{predict}{cluster_model}(object, newdata, output_list = FALSE)
}
\arguments{
\item{x}{The data that has been clustered.
For S3 methods, \code{x} refers to a \code{cluster_model} object.}

\item{object}{A \code{cluster_model} object.}

\item{y}{The cluster group assignments.}

\item{FUN}{The difference function to use. The first two
arguments for this function should correspond to vectors
of the two samples to compare. Additional arguments
can be provided via \code{...}.}

\item{asym}{A boolean. Toggles whether the \code{FUN} is asymmetrical,
i.e., dist(a, b) != dist(b, a). When TRUE, the \code{predict}
method will choose each neighbor based on the smaller of the
two distances.}

\item{...}{Arguments to the difference function.}

\item{newdata}{New data for which to assign cluster groups.}

\item{output_list}{A boolean. Toggles whether the \code{predict}
method should output a list of the distances used to select
the nearest neighbor.}
}
\description{
The \code{cluster_model} class and methods are intended to make
 it easier to generalize clustering results to new data.
 Its design mirrors methods used for supervised learning.
 First, an initial function builds a model that relates the input
 data \code{x} to the labels \code{y}. Second, another function deploys
 the model to \code{newdata}, for which labels are unknown or hidden.
 Unlike supervised learning, the labels for the new data get
 assigned procedurally using a nearest neighbor algorithm. Put
 simply, each new data point in \code{newdata} is given the label of
 the the point in \code{x} to which it is closest. Ties are broken
 randomly. The distance used is given by \code{FUN}.
}
\section{Slots}{

\describe{
\item{\code{x}}{Stores the data that has been clustered.}

\item{\code{y}}{Stores the cluster group assignments.}

\item{\code{FUN}}{Stores a difference function.}

\item{\code{asym}}{Stores whether the function is asymmetrical.}

\item{\code{args}}{Stores arguments to the difference function.}
}}

\examples{
library(factordist)
x <- simulate_factor_data(30, 6)
y <- sample(c("A", "B"), replace = TRUE, size = 30)
newdata <- simulate_factor_data(10, 6)
m <- cluster_model(x, y, FUN = d_jaccard)
predict(m, newdata)

}
